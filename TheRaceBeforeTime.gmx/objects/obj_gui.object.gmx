<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Initialize surface and views</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
for(i = 0; i &lt;= 1; i++)
{
    view_enabled[i] = true;
    view_visible[i] = true;
    view_wview[i] = 640;
    view_wport[i] = 640;
    view_hview[i] = 240;
    view_hport[i] = 240;
}

view_yport[1] = 240;

globalvar surface;
surface = surface_create(window_get_width(), window_get_height());
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Draw GUI</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(self)
{
    surface_set_target(surface);
    draw_clear_alpha(c_white, 0);
    
    draw_line_width(-10, window_get_height() / 2, window_get_width(), window_get_height() / 2, 2);
        
    draw_set_font(font_huge);

    // Draw countdown
    if(countDown &gt;= 0)
    {
        var message;
        if(countDown &gt; 0) message = string(countDown);
        else if(countDown == 0) message = "GO";
    
        draw_text_color(
            window_get_width() / 2 - 20,
            window_get_height() / 2 - 20,
            message,
            c_white, c_white, c_white, c_white, 1);
    }
    
    draw_set_font(font_bold);
    
    // Draw elapsed time
    draw_text_color(0, 0, string(elapsedTime),
        c_white, c_white, c_white, c_white, 1);
    
    // Draw player laps
    for(i = 0; i &lt; numPlayers; i++)
    {
        draw_text_color(
            window_get_width() - 75,
            (window_get_height() / (1+i)) - 25,
            "Laps: " + string(playerLaps[i+1]),
            c_white, c_white, c_white, c_white, 1);
    }

    
    surface_reset_target();
    
    if(surface_exists(surface))
    {
        draw_surface(surface, 0, 0);
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
